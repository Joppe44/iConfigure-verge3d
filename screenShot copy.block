<template color="#000000">
    <dummy>
        <label>before taking screenshot</label>
    </dummy>
    <value name="waitingTime">
        <block type="math_number"></block>
    </value>
    <statement name="beforeStatement"></statement>
    <dummy>
        <label>after taking screenshot</label>
    </dummy>
    <statement name="afterStatement"></statement>
</template>

<script>
    function wrapFn(contents) {
        return `function() {${contents}}`;
    }

    function code(block) {
        const beforeStatement = wrapFn(
            Blockly.JavaScript.statementToCode(block, "beforeStatement")
        );
        const afterStatement = wrapFn(Blockly.JavaScript.statementToCode(block, "afterStatement"));
        const waitingTime =
            Blockly.JavaScript.valueToCode(block, "waitingTime", Blockly.JavaScript.ORDER_NONE) ||
            `''`;

        const fun = Plug.provide("screenShot", function (before, after, waitingTime) {
            window.addEventListener("message", function (e) {
                let response = JSON.parse(e.data);
                if (response.action === "screenshot") {
                    before();

                    var win = window;

                    var overlay = win.document.createElement("img");
                    overlay.id = "overlay";
                    overlay.style =
                        "display: block; width: 100%; heigth: 100% z-index: 1000; position: absolute; top: 0; left: 0;";
                    overlay.src = appInstance.renderer.domElement.toDataURL("image/png");
                    document.querySelector("#v3d-container").parentNode.appendChild(overlay);

                    var screenshot = win.document.createElement("img");
                    screenshot.id = "screenshot";
                    screenshot.style = "display: none; width: 210px; heigth: 210px";
                    var canvas = document.querySelector("#v3d-container");
                    var p = JSON.parse(JSON.stringify(canvas.getBoundingClientRect()));

                    canvas.style.width = "420px";
                    canvas.style.height = "420px";
                    canvas.width = "420";
                    canvas.height = "420";

                    if (!appInstance.useHiDPIRenderPass) appInstance.renderer.setPixelRatio(1);

                    if (appInstance.postprocessing)
                        appInstance.postprocessing.composer.setPixelRatio(1);

                    appInstance.onResize();

                    setTimeout(() => {
                        screenshot.src = appInstance.renderer.domElement.toDataURL("image/png");

                        window.parent.postMessage(
                            JSON.stringify({ action: "screenshot", data: screenshot.src }),
                            "*"
                        );
                    }, 50);

                    setTimeout(() => {
                        canvas.width = `${p.width}`;
                        canvas.height = `${p.height}`;
                        canvas.style.width = `${p.width}px`;
                        canvas.style.height = `${p.height}px`;
                        overlay.remove();
                        setScreenScale(window.devicePixelRatio);

                    }, 100);

                    setTimeout(() => {
                        after();
                    }, waitingTime + 100);
                }
            });
        });
        return `${fun}( ${beforeStatement},${afterStatement},${waitingTime});`;
    }
</script>
